//noinspection CssUnknownTarget
@import url('https://fonts.googleapis.com/css2?family=Fira+Mono&family=Inter:wght@300;400;500&display=swap');

$primary: #393939;

$border-radius: .375rem;
$border-radius-sm: .225rem;
$border-radius-lg: .275rem;

@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/mixins";

$btn-padding-y-xs: $btn-padding-y-sm * 0.75;
$btn-padding-x-xs: $btn-padding-x-sm * 0.75;
$btn-font-size-xs: $btn-font-size-sm * 0.9;
$btn-border-radius-xs: $btn-border-radius-sm;

// Respond above.
@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($grid-breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

$spacers-extended: (
        6: $spacer * 6
);
$spacers: map-merge($spacers, $spacers-extended);

$colors-extended: (
        "dropbox": #005ff7
);
$theme-colors: map-merge($theme-colors, $colors-extended);

$font-sizes-extended: (
        "details": $font-size-base * 0.9
);
$font-sizes: map-merge($font-sizes, $font-sizes-extended);

@import "bootstrap/scss/bootstrap";

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
  'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
  sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
  monospace;
}

.center {
  display: flex;
  align-items: center;
  justify-content: center;
}

$widths: ("xs": 8rem, "sm": 24rem, "md": 32rem, "lg": 46rem);

@each $size, $value in $widths {
  .max-w-#{$size} {
    max-width: $value;
    width: 100%;
  }
}

.editor-container {
  @extend .row;
  width: 100%;
  max-width: 1620px;
  font-size: $font-size-base * 0.85;
  padding-bottom: 2rem;
  padding-top: $spacer*2;
  padding-right: $spacer;
  padding-left: $spacer;
  margin: 0 auto !important;
  flex-grow: 1;
  position: relative;

  & .editor-preview {
    @if attr(data-preview) == true {
      display: block;
    } @else {
      display: none;
    }
  }

  &[data-preview=false] {
    & .editor-preview {
      display: none;
    }

    & .editor {
      display: block;
    }
  }

  &[data-preview=true] {
    & .editor-preview {
      display: block;
    }

    & .editor {
      display: none;
    }
  }

  @include respond-above(lg) {
    padding-top: $spacer;
    padding-right: $spacer*2;
    padding-left: $spacer*2;

    & > * {
      position: relative;
    }

    & .editor-preview, & .editor {
      display: block !important;
    }
  }
}

.editor, .editor-preview {
  font-family: "Fira Code", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  padding-left: $spacer;
  padding-right: $spacer;
  padding-top: $spacer;
  padding-bottom: $spacer*4;
  margin: 0 auto;
  max-width: map-get($grid-breakpoints, "md");

  @include respond-above(lg) {
    padding: $spacer*2 $spacer;
    max-width: none;
  }
}

.editor {
  @extend .border-0;
  @extend .text-light;
  @extend .overflow-hidden;
  outline: none;
  resize: none;
  width: 100%;
  background-color: inherit;
}

$editor-h1-color: #a79645;
$editor-h2-color: #939bd6;
$editor-h3-color: #ba6ea0;
$editor-h4-color: #b78b60;
$editor-h5-color: #859679;
$editor-h6-color: #859679;

.editor-preview {
  h1 {
    color: $editor-h1-color;
    font-weight: bold;
  }

  h2 {
    color: $editor-h2-color;
  }

  h3 {
    color: $editor-h3-color;
  }

  h4 {
    color: $editor-h4-color;
  }

  h5 {
    color: $editor-h5-color;
  }

  h6 {
    color: $editor-h6-color;
  }
}

.btn > .spinner-border {
  margin-right: $spacer * 0.5;
}

.mr-2 {
  margin-right: $spacer * 0.5;
}

.ml-2 {
  margin-left: 0.5rem;
}

.toggle-preview-button {
  @extend .btn;
  @extend .text-light;
  display: block;
  @include respond-above(lg) {
    display: none;
  }
}

.toggle-sidebar-button {
  @extend .toggle-preview-button;
}

.floating-action-button {
  @extend .btn;
  position: fixed;
  bottom: $spacer;
  right: $spacer;
  z-index: 100;
  border-radius: 50%;
}

.file-explorer {
  @extend .card;
  position: absolute;
  z-index: 2;
  width: 100%;
  max-width: 100%;
  border-radius: 0;
  min-height: 100%;
  overflow-y: auto;
  overflow-x: hidden;

  &[data-hidden=true] {
    display: none;
  }

  &[data-hidden=false] {
    display: block;
  }

  @include respond-above(lg) {
    border-radius: $card-border-radius;
    max-width: min(325px, 30vw);
    position: relative;
    display: block !important;
  }
}

.dropbox-dropin-btn, .dropbox-dropin-default {
  @extend .btn;
  @extend .btn-primary;
}

.directory {
  @extend .list-group-item;
  @extend .list-group-item-action;
  border: none;
}

$subdir-line-border-radius: 2px;
.subdirs {
  & > div:first-child:before {
    border-radius: $subdir-line-border-radius $subdir-line-border-radius 0 0;
  }

  & > div:last-child:before {
    border-radius: 0 0 $subdir-line-border-radius $subdir-line-border-radius;
    height: 120%;
  }

  & > div:only-child:before {
    border-radius: $subdir-line-border-radius;
  }

  & > div:before {
    content: '';
    position: absolute;
    border-left: 3px solid $primary;
    left: -0.20rem;
    top: -1.5rem;
    z-index: 2;
    height: 100%;
  }
}

.tooltip {
  @extend .opacity-50;
}

.btn-xs {
  @include button-size($btn-padding-y-xs, $btn-padding-x-xs, $btn-font-size-xs, $btn-border-radius-xs);
}
